<?xml version="1.0" encoding="UTF-8"?>

<project name="lab4" default="build">

    <property file="build.properties"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="*.jar"/>
        <fileset dir="${main.dir}" includes="*.java"/>
    </path>

    <path id="classpath.test">
        <pathelement location="${junit}"/>
        <pathelement location="${hamcrest}"/>
        <pathelement location="${classes.dir}"/>
    </path>

    <target name="compile" depends="clean">
        <echo message="***** COMPILE STARTED *****"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${test.classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" includeantruntime="false"/>
        <echo message="***** COMPILE COMPLETED *****"/>
    </target>

    <target name="build" depends="compile">
        <echo message="***** BUILD STARTED *****"/>
        <copy todir="${build.dir}">
            <fileset dir="${web.dir}"/>
        </copy>
        <copy todir="${build.dir.lib}">
            <fileset dir="${lib.dir}"/>
        </copy>
        <copy todir="${classes.dir}">
            <fileset dir="${resources.dir}"/>
        </copy>
<!--        <jar destfile="${build.dir}/${ant.project.name}.jar">-->
<!--            <fileset dir="${classes.dir}"/>-->
<!--            <manifest>-->
<!--                <attribute name="Created-By" value="averagefun"/>-->
<!--                <attribute name="Manifest-Version" value="1.0"/>-->
<!--                <attribute name="Main-Class" value="Main"/>-->
<!--            </manifest>-->
<!--        </jar>-->
        <war destfile="${build.dir}/${ant.project.name}.war" webxml="${build.web.xml}">
            <fileset dir="${build.dir}"/>
            <manifest>
                <attribute name="Created-By" value="averagefun"/>
                <attribute name="Manifest-Version" value="1.0"/>
                <attribute name="Main-Class" value="NoClass"/>
            </manifest>
        </war>
        <echo message="***** BUILD COMPLETED *****"/>
    </target>

    <target name="clean">
        <echo message="***** CLEAN STARTED *****"/>
        <delete dir="${build.dir}"/>
        <delete dir="${junit.report.dir}"/>
        <echo message="***** CLEAN COMPLETED *****"/>
    </target>

    <target name="test" depends="build">
        <echo message="***** TEST STARTED *****"/>
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${junit.report.dir}"/>
        <javac destdir="${test.classes.dir}" srcdir="${test.dir}" includeantruntime="false" encoding="utf-8">
            <classpath refid="classpath.test"/>
        </javac>
        <junit printsummary="on" haltonfailure="true" haltonerror="true">
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${test.classes.dir}"/>
            </classpath>
            <batchtest fork="yes" todir="${junit.report.dir}">
                <formatter type="xml"/>
                <fileset dir="${test.dir}" includes="*Test.java"/>
            </batchtest>
        </junit>
        <echo message="***** TEST COMPLETED *****"/>
    </target>

    <target name="music" depends="build">
        <sound>
            <success source="sound.wav"/>
            <fail source="sound_fail.wav"/>
        </sound>
    </target>

    <target name="team">
        <echo message="***** TEAM STARTED *****"/>
        <mkdir dir="${team.build.dir}"/>

        <antcall target="build-revision">
            <param name="link" value="HEAD"/>
        </antcall>
        <antcall target="build-revision">
            <param name="link" value="HEAD~1"/>
        </antcall>
        <antcall target="build-revision">
            <param name="link" value="HEAD~1"/>
        </antcall>
        <antcall target="build-revision">
            <param name="link" value="HEAD~1"/>
        </antcall>

        <exec executable="git">
            <arg value="checkout"/>
            <arg value="master"/>
        </exec>

        <zip destfile="${ant.dir}/team-build.zip">
            <fileset dir="${team.build.dir}"/>
        </zip>

<!--        <delete dir="team-builds"/>-->
        <echo message="***** TEAM COMPLITED *****"/>
    </target>

    <target name="build-revision">
        <property name="link" value="${link}"/>

        <exec executable="git" outputproperty="revision">
            <arg value="rev-parse"/>
            <arg value="${link}"/>
        </exec>

        <exec executable="git">
            <arg value="checkout"/>
            <arg value="${revision}"/>
        </exec>

        <antcall target="build"/>

        <copy todir="${team.build.dir}/${revision}">
            <fileset dir="${build.dir}" includes="*.jar"/>
            <fileset dir="${build.dir}" includes="*.war"/>
        </copy>
    </target>
</project>